diff --git a/client/models/userlistmodel.cpp b/client/models/userlistmodel.cpp
index d5345a7..a18dc26 100644
--- a/client/models/userlistmodel.cpp
+++ b/client/models/userlistmodel.cpp
@@ -22,6 +22,8 @@
 #include <QElapsedTimer>
 #include <QtCore/QDebug>
 #include <QtGui/QPixmap>
+#include <QPalette>
+#include <QApplication>
 
 #include <connection.h>
 #include <room.h>
@@ -108,6 +110,15 @@ QVariant UserListModel::data(const QModelIndex& index, int role) const
         return tooltip;
     }
 
+    if (role == Qt::TextColorRole)
+    {
+        return QColor::fromHslF(user->hueF(),
+                                1 - QApplication::palette().color(QPalette::Window).saturationF(),
+                                -0.7 * QApplication::palette().color(QPalette::Window).lightnessF() + 0.9,
+                                QApplication::palette().color(QPalette::ButtonText).alphaF()
+                                );
+    }
+
     return QVariant();
 }
 
diff --git a/client/qml/TimelineItem.qml b/client/qml/TimelineItem.qml
index 24fe361..9e59769 100644
--- a/client/qml/TimelineItem.qml
+++ b/client/qml/TimelineItem.qml
@@ -46,7 +46,7 @@ Item {
                                         EventStatus.SendingFailed
                                     ].indexOf(marks) != -1
     readonly property bool failed: marks === EventStatus.SendingFailed
-    readonly property string textColor:
+    readonly property color textColor:
         marks === EventStatus.Submitted || failed ? defaultPalette.mid :
         marks === EventStatus.Departed ? disabledPalette.text :
         redacted ? disabledPalette.text :
@@ -54,6 +54,27 @@ Item {
         (["state", "notice", "other"].indexOf(eventType) >= 0) ?
                 disabledPalette.text : defaultPalette.text
     readonly property string authorName: room && room.safeMemberName(author.id)
+    function stringToHue(str) {
+        var hash = 0
+        if ((str).length === 0)
+            return hash
+        for (var i = 0; i < (str).length; i++) {
+            hash = (str).charCodeAt(i) + ((hash << 5) - hash)
+            hash = hash & hash
+        }
+        return Math.abs(hash)/2147483647
+    }
+    function stringToColor(str) {
+        if (str) {
+            return Qt.hsla(author.hueF,
+                           (1-defaultPalette.window.hslSaturation),
+                           /* contrast but not too heavy: */
+                           (-0.7*defaultPalette.window.hslLightness + 0.9),
+                           textColor.a)
+        }
+        return textColor
+    }
+    readonly property color fancyColor: stringToColor(authorName)
 
     readonly property bool xchatStyle: settings.timeline_style === "xchat"
     readonly property bool actionEvent: eventType == "state" || eventType == "emote"
@@ -156,7 +177,7 @@ Item {
                     actionEvent ? Text.AlignRight : Text.AlignLeft
                 elide: Text.ElideRight
 
-                color: textColor
+                color: fancyColor
                 textFormat: Label.PlainText
                 font.bold: !xchatStyle
                 renderType: settings.render_type
@@ -250,7 +271,7 @@ Item {
                     // FIXME: The text is clumsy and slows down creation
                     text: (actionEvent && !xchatStyle ?
                            ("<a href='#mention' style='text-decoration:none;color:\"" +
-                                    defaultPalette.text + "\"'><b>" +
+                                    fancyColor + "\"'><b>" +
                                     toHtmlEscaped(authorName) + "</b></a> ") : ""
                           ) + display +
                           (annotation ? "<br><em>" + annotation + "</em>" : "")
